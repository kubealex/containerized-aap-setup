---
- name: AAP2 Containerized Setup | Prepare RHEL host
  hosts: aap2_host
  pre_tasks:
    - name: AAP2 Containerized Setup | Set home directory as fact
      ansible.builtin.set_fact:
        user_home: "~"

    - name: AAP2 Containerized Setup | Register host with Subscription Manager
      community.general.redhat_subscription:
        state: present
        username: "{{ rhsm_user }}"
        password: "{{ rhsm_password }}"
      become: true

    - name: AAP2 Containerized Setup | Install required packages
      ansible.builtin.dnf:
        name:
          - ansible-core
          - wget
          - git
          - rsync
        state: latest # noqa package-latest
      become: true

  roles:
    - role: role-package-downloader
      vars:
        rh_api_offline_token: "{{ rh_api_token }}"
        rh_product_name: aap2_containerized
        rh_product_path: "{{ user_home }}"

  post_tasks:
    - name: AAP2 Containerized Setup | Extract installer to "{{ user_home }}"
      ansible.builtin.unarchive:
        src: "{{ rh_package_path }}"
        dest: "{{ user_home }}"
        remote_src: true
        list_files: true
      register: _unarchive_output

    - name: AAP2 Containerized Setup | Set installer dir as fact
      ansible.builtin.set_fact:
        aap2_installer_dir: "{{ _unarchive_output.files[0] }}"

    - name: AAP2 Containerized Setup | Populate inventory for AAP2 Install
      ansible.builtin.template:
        src: inventory.j2
        dest: "{{ user_home }}/{{ aap2_installer_dir }}/inventory"
        mode: "0755"

    - name: AAP2 Containerized Setup | Run setup playbook # noqa command-instead-of-shell no-changed-when
      ansible.builtin.shell:
        cmd: ansible-playbook -i inventory ansible.containerized_installer.install
        chdir: "{{ aap2_installer_dir }}"
      environment:
        ANSIBLE_COLLECTIONS_PATH: "{{ user_home }}/{{ aap2_installer_dir }}/collections"

    - name: AAP2 Containerized Setup | Print environment info
      ansible.builtin.debug:
        msg:
          - Ansible Automation Platform 2 has been successfully installed
          - All your instances are accessible using "admin" as username with password {{ aap2_password | default('redhat', true) }}
          - Automation Controller URL - https://{{ hostvars[inventory_hostname].ansible_fqdn }}:443
          - Automation Hub URL - https://{{ hostvars[inventory_hostname].ansible_fqdn }}:444
          - EDA Controller URL - https://{{ hostvars[inventory_hostname].ansible_fqdn }}:445
